<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ICDE</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 06 Nov 2022 01:46:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>动态规划应用</title>
      <link>http://example.com/2022/11/06/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%BA%94%E7%94%A8%E9%A2%98/</link>
      <guid>http://example.com/2022/11/06/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%BA%94%E7%94%A8%E9%A2%98/</guid>
      <pubDate>Sun, 06 Nov 2022 01:45:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;动态规划应用&quot;&gt;&lt;a href=&quot;#动态规划应用&quot; class=&quot;headerlink&quot; title=&quot;动态规划应用&quot;&gt;&lt;/a&gt;动态规划应用&lt;/h1&gt;&lt;h2 id=&quot;一、股票问题&quot;&gt;&lt;a href=&quot;#一、股票问题&quot; class=&quot;headerlink&quot; titl</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="动态规划应用"><a href="#动态规划应用" class="headerlink" title="动态规划应用"></a>动态规划应用</h1><h2 id="一、股票问题"><a href="#一、股票问题" class="headerlink" title="一、股票问题(*)"></a>一、股票问题(*)</h2><blockquote><p> <a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iv/">188. 买卖股票的最佳时机 IV</a></p><p>给定一个整数数组 prices ，它的第 i 个元素 prices[i] 是一支给定的股票在第 i 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。</p><p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p></blockquote><p>labuladong算法秘籍中使用了【三个<strong>状态</strong>】（三维dp数组）</p><ol><li>第几天</li><li>手中是否持有股票</li><li>最大交易限制（最大交易限制只在买入股票时减一）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dp[i][j][k] 意味着在第i天，手中持有(j=1)或不持有(j=0)股票，最大交易限制为k情况下的最大利润</span></span><br></pre></td></tr></table></figure><p><strong>状态转移方程</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>][k] = Math.max(</span><br><span class="line">    dp[i-<span class="number">1</span>][<span class="number">0</span>][k],  <span class="comment">// 第i天 不买入不卖出: 第i-1天也没有股票，交易限制还是k</span></span><br><span class="line">    dp[i-<span class="number">1</span>][<span class="number">1</span>][k]+prices[i-<span class="number">1</span>] <span class="comment">// 第i天 卖出: 第i-1天有股票，交易限制还是k</span></span><br><span class="line">);</span><br><span class="line">dp[i][<span class="number">1</span>][k] = Math.max(</span><br><span class="line">    dp[i-<span class="number">1</span>][<span class="number">1</span>][k], <span class="comment">// 第i天 不买入不卖出: 第i-1天有股票，交易限制为k</span></span><br><span class="line">    dp[i-<span class="number">1</span>][<span class="number">0</span>][k-<span class="number">1</span>]-prices[i-<span class="number">1</span>] <span class="comment">// 第i天 买入: 第i-1天没有股票，最大交易次数不能超过k-1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>base case</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>][...] = <span class="number">0</span>; dp[<span class="number">0</span>][<span class="number">1</span>][...] = Integer.MIN_VALUE;</span><br><span class="line">dp[...][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>; dp[...][<span class="number">1</span>][<span class="number">0</span>] = Integer.MIN_VALUE;</span><br></pre></td></tr></table></figure><h2 id="二、打劫家舍问题"><a href="#二、打劫家舍问题" class="headerlink" title="二、打劫家舍问题"></a>二、打劫家舍问题</h2><blockquote><p>[198.打劫家舍](<a href="https://leetcode.cn/problems/house-robber/">198. 打家劫舍 - 力扣（LeetCode）</a>)</p><p> <a href="https://leetcode.cn/problems/house-robber-ii/">213. 打家劫舍 II</a></p><p><a href="https://leetcode.cn/problems/house-robber-iii/">337. 打家劫舍 III</a></p></blockquote><h3 id="1、打劫家舍"><a href="#1、打劫家舍" class="headerlink" title="1、打劫家舍"></a>1、打劫家舍</h3><p>【状态】是 <u>抢劫第i家时能获得的最大金额</u></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 状态转移方程</span></span><br><span class="line">dp[i] = Math.max(dp[i-<span class="number">2</span>], dp[i-<span class="number">3</span>]) + nums[i];</span><br></pre></td></tr></table></figure><h3 id="2、打劫家舍Ⅱ"><a href="#2、打劫家舍Ⅱ" class="headerlink" title="2、打劫家舍Ⅱ"></a>2、打劫家舍Ⅱ</h3><blockquote><p>特别之处在于 nums 换成了环形数组</p></blockquote><p>应对策略也十分巧妙</p><p>$f([x_{1}, x_{2}, … , x_{n}]) &#x3D; max( f([x_{1}, x_{2}, …, x_{n-1}]), f([x_{2}, …, x_{n}]) )$</p><p><u><strong>既然首尾相连了，那么肯定最多只能抢劫一家，把另外一家除去</strong></u>，就把环形数组又变成了普通数组了。</p><h3 id="3、打劫家舍Ⅲ"><a href="#3、打劫家舍Ⅲ" class="headerlink" title="3、打劫家舍Ⅲ"></a>3、打劫家舍Ⅲ</h3><blockquote><p>把家舍的形状变成了二叉树</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">rob</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] res = dp(root);</span><br><span class="line">        <span class="keyword">return</span> Math.max(res[<span class="number">0</span>], res[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// return &#123;x, y&#125; </span></span><br><span class="line">    <span class="comment">// x: 包括root节点的最高金额 </span></span><br><span class="line">    <span class="comment">// y: 不包含root节点的最高金额</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] dp(TreeNode root)&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] left = dp(root.left);</span><br><span class="line">        <span class="type">int</span>[] right = dp(root.right);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> left[<span class="number">1</span>] + right[<span class="number">1</span>] + root.val;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> Math.max(left[<span class="number">1</span>], left[<span class="number">0</span>]) + Math.max(right[<span class="number">1</span>], right[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;x, y&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、博弈问题"><a href="#三、博弈问题" class="headerlink" title="三、博弈问题"></a>三、博弈问题</h2><blockquote><p><a href="https://leetcode.cn/problems/predict-the-winner/">486. 预测赢家</a></p></blockquote><p>最核心最关键的还是在【找状态】，理解！！！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种比较容易理解的，三维数组</span></span><br><span class="line"><span class="comment">// dp[i][j][0] 表示在[xi...xj]区间时，先手的最大得分</span></span><br><span class="line">dp[i][j][<span class="number">0</span>] = Math.max(nums[i]+dp[i+<span class="number">1</span>][j][<span class="number">1</span>], nums[j]+dp[i][j-<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line"><span class="comment">// [i...j] 先手可以选择i也可以选择j</span></span><br><span class="line"><span class="comment">// 选择i后，在[i+1...j]区间就变成了后手，就是dp[i+1][j][1]</span></span><br><span class="line"><span class="comment">// 选择j后，在[i...j+1]区间就变成了后手，就是dp[i][j-1][1]</span></span><br><span class="line"><span class="keyword">if</span> 先手选择了i: dp[i][j][<span class="number">1</span>] = dp[i+<span class="number">1</span>][j][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> 先手选择了j: dp[i][j][<span class="number">1</span>] = dp[i][j-<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种稍微改进一点，二维数组</span></span><br><span class="line"><span class="comment">// dp[i][j][1] 表示在[xi...xj]区间时，先手的最大得分-后手的最大得分</span></span><br><span class="line">dp[i][j] = Math.max(nums[i] - dp[i+<span class="number">1</span>][j], nums[j] - dp[i][j-<span class="number">1</span>]);</span><br><span class="line"><span class="comment">// 在[i...j]先手做出选择后，就变成了后手，所以是&lt;减&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、扔鸡蛋（-）"><a href="#四、扔鸡蛋（-）" class="headerlink" title="四、扔鸡蛋（***）"></a>四、扔鸡蛋（***）</h2><blockquote><p><a href="https://leetcode.cn/problems/super-egg-drop/">887.鸡蛋掉落</a></p><p>这道题理解上难度很高…</p></blockquote><p><img src="https://my-picture-repo.obs.cn-east-3.myhuaweicloud.com/my-blog-imgs/image-20221104212852347.png" alt="image-20221104212852347"></p><p>这里讲一个逆向思维。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[i][j] 表示有j个鸡蛋，可以操作i次，可以在最高dp[i][j]的建筑里保证找到f</span><br></pre></td></tr></table></figure><p>比如<code>dp[2][1]=2</code>，表示有1个鸡蛋，可以操作2次，可以在最高2楼的建筑里保证找到<code>f</code>。意思就是如果楼<code>&gt;=</code>3，就不能保证在1个鸡蛋2次操作的情况下找到f。这里的保证是指不管在什么情况下都可以成功找到f，而不是说有一定概率可以找到。很好理解，不管多高的楼层，即使给1个鸡蛋1次操作，也有一定概率可以找到f（第1层就碎了，所以<code>f=0</code>）</p><p>理解完状态之后，就需要找到状态转移方程。先给出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[i][j] = <span class="number">1</span> + dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + dp[i][j-<span class="number">1</span>];</span><br></pre></td></tr></table></figure><p>这里应该是这道题最难理解的地方。</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/">leetcode刷题笔记</category>
      
      
      
      <comments>http://example.com/2022/11/06/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%BA%94%E7%94%A8%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>lab3</title>
      <link>http://example.com/2022/11/06/lab3/</link>
      <guid>http://example.com/2022/11/06/lab3/</guid>
      <pubDate>Sat, 05 Nov 2022 16:40:57 GMT</pubDate>
      
      
      
      
      
      
      <comments>http://example.com/2022/11/06/lab3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ECMAScript</title>
      <link>http://example.com/2022/11/05/ECMAScript/</link>
      <guid>http://example.com/2022/11/05/ECMAScript/</guid>
      <pubDate>Sat, 05 Nov 2022 08:13:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;ECMAScript&quot;&gt;&lt;a href=&quot;#ECMAScript&quot; class=&quot;headerlink&quot; title=&quot;ECMAScript&quot;&gt;&lt;/a&gt;ECMAScript&lt;/h1&gt;&lt;h2 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;head</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript"></a>ECMAScript</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h2><p>ECMA是一个组织，制定了一些标准，然后JS去实现这些标准。</p><p>ES2015兼容性：IE10+、Chrome、FireFox、移动端、NodeJS</p><p>由于兼容性问题，对于一些版本较低的设备，就需要使用一些方法使得ES6的代码可以运行起来</p><p>1、浏览器打开页面时，对ES6代码进行转换。</p><p>2、先将ES6代码编译为可以被低版本设备接收的代码，再拿去执行。</p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2022/11/05/ECMAScript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://example.com/2022/09/22/hello-world/</link>
      <guid>http://example.com/2022/09/22/hello-world/</guid>
      <pubDate>Thu, 22 Sep 2022 07:39:36 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="A-Picture"><a href="#A-Picture" class="headerlink" title="A Picture"></a>A Picture</h3><p><img src="https://my-picture-repo.obs.cn-east-3.myhuaweicloud.com/imgs/QQ%E5%9B%BE%E7%89%8720200731164308.jpg" alt="image-20221018133542000"></p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2022/09/22/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
